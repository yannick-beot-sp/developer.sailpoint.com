get:
  operationId: listAccounts
  tags:
    - Accounts
  summary: Accounts List
  description: >-
    This returns a list of accounts.  

    A token with ORG_ADMIN authority is required to call this API.
  security:
    - UserContextAuth: [idn:accounts:read]
  parameters:
    - $ref: "../parameters/limit.yaml"
    - $ref: "../parameters/offset.yaml"
    - $ref: "../parameters/count.yaml"
    - in: query
      name: filters
      schema:
        type: string
      example: identityId eq "2c9180858082150f0180893dbaf44201"
      description: >-
        Filter results using the standard syntax described in [V3 API Standard
        Collection
        Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)


        Filtering is supported for the following fields and operators:


        **id**: *eq, in, sw*


        **identityId**: *eq, in, sw*


        **name**: *eq, in, sw*


        **nativeIdentity**: *eq, in, sw*


        **sourceId**: *eq, in, sw*


        **uncorrelated**: *eq*


        **identity.name**: *eq, in, sw*
      required: false
    - in: query
      name: sorters
      required: false
      schema:
        type: string
        format: comma-separated
      example: id,name
      description: >-
        Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)


        Sorting is supported for the following fields: **id, name, created, modified, sourceId, identityId, identity.id, nativeIdentity, uuid, manuallyCorrelated, identity.name**
  responses:
    "200":
      description: List of account objects
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../schemas/Account.yaml"
    "400":
      $ref: "../responses/400.yaml"
    "401":
      $ref: "../responses/401.yaml"
    "403":
      $ref: "../responses/403.yaml"
    "429":
      $ref: "../responses/429.yaml"
    "500":
      $ref: "../responses/500.yaml"
post:
  operationId: createAccount
  tags:
    - Accounts
  summary: Create Account
  description: >-
    This API submits an account creation task and returns the task ID.  

    The `sourceId` where this account will be created must be included in the `attributes` object.

    >**Note: This API only supports account creation for file based sources.**

    A token with ORG_ADMIN authority is required to call this API.
  security:
    - UserContextAuth: [idn:accounts:manage]
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/AccountAttributesCreate.yaml"
  responses:
    "202":
      description: Async task details
      content:
        application/json:
          schema:
            $ref: "../schemas/AccountsAsyncResult.yaml"
    "400":
      $ref: "../responses/400.yaml"
    "401":
      $ref: "../responses/401.yaml"
    "403":
      $ref: "../responses/403.yaml"
    "429":
      $ref: "../responses/429.yaml"
    "500":
      $ref: "../responses/500.yaml"
