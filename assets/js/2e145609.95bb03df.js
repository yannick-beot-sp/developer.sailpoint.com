"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[42301],{84151:(e,t,n)=>{n.d(t,{Z:()=>y});var a=n(67294),c=n(86010),i=n(39960),s=n(53438),o=n(13919),r=n(95999);const l={cardContainer:"cardContainer_S8oU",cardTitle:"cardTitle_HoSo",cardDescription:"cardDescription_c27F"};var u=n(99603),d=n(21702),p=n(92949);function m(e){let{href:t,children:n}=e;return a.createElement(i.default,{href:t,className:(0,c.default)("card padding--lg",l.cardContainer)},n)}function h(e){let{href:t,icon:n,title:i,description:s}=e;return a.createElement(m,{href:t},a.createElement("h2",{className:(0,c.default)("text--truncate",l.cardTitle),title:i},n,i),s&&a.createElement("p",{className:l.cardDescription,title:s},s))}function f(e){let{item:t}=e;const n=(0,s.Wl)(t),{colorMode:c}=(0,p.I)();return n?a.createElement(h,{href:n,icon:a.createElement(u.G,{icon:d.cC_,style:{marginRight:"0.5em"},color:"dark"===c?"#7ecfee":"#0033a1"}),title:t.label,description:t.customProps?.description??(0,r.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function g(e){let{item:t}=e;const{colorMode:n}=(0,p.I)(),c=(0,o.Z)(t.href)?a.createElement(u.G,{icon:d.FL8,style:{marginRight:"0.5em"},color:"dark"===n?"#7ecfee":"#0033a1"}):a.createElement(u.G,{icon:d.wlW,style:{marginRight:"0.5em"},color:"dark"===n?"#7ecfee":"#0033a1"}),i=(0,s.xz)(t.docId??void 0);return a.createElement(h,{href:t.href,icon:c,title:t.label,description:t.description??i?.description})}function y(e){let{item:t}=e;switch(t.type){case"link":return a.createElement(g,{item:t});case"category":return a.createElement(f,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}},70993:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(87462),c=(n(67294),n(3905)),i=n(8065),s=n(53438);const o={id:"accounts",title:"Accounts",description:"Accounts",custom_edit_url:null},r=void 0,l={unversionedId:"api/beta/accounts",id:"api/beta/accounts",title:"Accounts",description:"Accounts",source:"@site/docs/api/beta/accounts.tag.mdx",sourceDirName:"api/beta",slug:"/api/beta/accounts",permalink:"/docs/api/beta/accounts",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"accounts",title:"Accounts",description:"Accounts",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Returns account usage insights",permalink:"/docs/api/beta/get-usages-by-account-id"},next:{title:"Accounts List",permalink:"/docs/api/beta/list-accounts"}},u={},d=[],p={toc:d},m="wrapper";function h(e){let{components:t,...n}=e;return(0,c.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"Use this API to implement and customize account functionality.\nWith this functionality in place, administrators can manage users' access across sources in IdentityNow."),(0,c.kt)("p",null,"In IdentityNow, an account refers to a user's account on a supported source.\nThis typically includes a unique identifier for the user, a unique password, a set of permissions associated with the source and a set of attributes. IdentityNow loads accounts through the creation of sources in IdentityNow."),(0,c.kt)("p",null,"Administrators can correlate users' identities with the users' accounts on the different sources they use.\nThis allows IdentityNow to govern the access of identities and all their correlated accounts securely and cohesively."),(0,c.kt)("p",null,"To view the accounts on a source and their correlated identities, administrators can use the Connections drop-down menu, select Sources, select the relevant source, and select its Account tab."),(0,c.kt)("p",null,"To view and edit source account statuses for an identity in IdentityNow, administrators can use the Identities drop-down menu, select Identity List, select the relevant identity, and select its Accounts tab.\nAdministrators can toggle an account's Actions to aggregate the account, enable/disable it, unlock it, or remove it from the identity."),(0,c.kt)("p",null,"Accounts can have the following statuses:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Enabled: The account is enabled. The user can access it.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Disabled: The account is disabled, and the user cannot access it, but the identity is not disabled in IdentityNow. This can occur when an administrator disables the account or when the user's lifecycle state changes.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Locked: The account is locked. This may occur when someone has entered an incorrect password for the account too many times.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Pending: The account is currently updating. This status typically lasts seconds."))),(0,c.kt)("p",null,"Administrators can select the source account to view its attributes, entitlements, and the last time the account's password was changed."),(0,c.kt)("p",null,"Refer to ",(0,c.kt)("a",{parentName:"p",href:"https://documentation.sailpoint.com/saas/help/common/users/user_access.html#managing-user-accounts"},"Managing User Accounts")," for more information about accounts."),(0,c.kt)(i.Z,{items:(0,s.jA)().items,mdxType:"DocCardList"}))}h.isMDXComponent=!0}}]);