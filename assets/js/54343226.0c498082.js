"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[90390],{84151:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(67294),i=n(86010),r=n(39960),o=n(53438),c=n(13919),l=n(95999);const s={cardContainer:"cardContainer_S8oU",cardTitle:"cardTitle_HoSo",cardDescription:"cardDescription_c27F"};var d=n(99603),p=n(21702),m=n(92949);function u(e){let{href:t,children:n}=e;return a.createElement(r.default,{href:t,className:(0,i.default)("card padding--lg",s.cardContainer)},n)}function f(e){let{href:t,icon:n,title:r,description:o}=e;return a.createElement(u,{href:t},a.createElement("h2",{className:(0,i.default)("text--truncate",s.cardTitle),title:r},n,r),o&&a.createElement("p",{className:s.cardDescription,title:o},o))}function h(e){let{item:t}=e;const n=(0,o.Wl)(t),{colorMode:i}=(0,m.I)();return n?a.createElement(f,{href:n,icon:a.createElement(d.G,{icon:p.cC_,style:{marginRight:"0.5em"},color:"dark"===i?"#7ecfee":"#0033a1"}),title:t.label,description:t.customProps?.description??(0,l.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function g(e){let{item:t}=e;const{colorMode:n}=(0,m.I)(),i=(0,c.Z)(t.href)?a.createElement(d.G,{icon:p.FL8,style:{marginRight:"0.5em"},color:"dark"===n?"#7ecfee":"#0033a1"}):a.createElement(d.G,{icon:p.wlW,style:{marginRight:"0.5em"},color:"dark"===n?"#7ecfee":"#0033a1"}),r=(0,o.xz)(t.docId??void 0);return a.createElement(f,{href:t.href,icon:i,title:t.label,description:t.description??r?.description})}function k(e){let{item:t}=e;switch(t.type){case"link":return a.createElement(g,{item:t});case"category":return a.createElement(h,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}},50200:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>c,metadata:()=>s,toc:()=>p});var a=n(87462),i=(n(67294),n(3905)),r=n(8065),o=n(53438);const c={id:"tenant",title:"Tenant",description:"Tenant",custom_edit_url:null},l=void 0,s={unversionedId:"api/beta/tenant",id:"api/beta/tenant",title:"Tenant",description:"Tenant",source:"@site/docs/api/beta/tenant.tag.mdx",sourceDirName:"api/beta",slug:"/api/beta/tenant",permalink:"/docs/api/beta/tenant",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"tenant",title:"Tenant",description:"Tenant",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Retrieve headers only for pending task list.",permalink:"/docs/api/beta/get-pending-task-headers"},next:{title:"Get Tenant Information.",permalink:"/docs/api/beta/get-tenant"}},d={},p=[],m={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"API for reading tenant details."),(0,i.kt)(r.Z,{items:(0,o.jA)().items,mdxType:"DocCardList"}))}f.isMDXComponent=!0}}]);