"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[14449],{84151:(e,t,i)=>{i.d(t,{Z:()=>C});var n=i(67294),r=i(86010),a=i(39960),o=i(53438),c=i(13919),l=i(95999);const s={cardContainer:"cardContainer_S8oU",cardTitle:"cardTitle_HoSo",cardDescription:"cardDescription_c27F"};var d=i(99603),u=i(21702),m=i(92949);function f(e){let{href:t,children:i}=e;return n.createElement(a.default,{href:t,className:(0,r.default)("card padding--lg",s.cardContainer)},i)}function p(e){let{href:t,icon:i,title:a,description:o}=e;return n.createElement(f,{href:t},n.createElement("h2",{className:(0,r.default)("text--truncate",s.cardTitle),title:a},i,a),o&&n.createElement("p",{className:s.cardDescription,title:o},o))}function g(e){let{item:t}=e;const i=(0,o.Wl)(t),{colorMode:r}=(0,m.I)();return i?n.createElement(p,{href:i,icon:n.createElement(d.G,{icon:u.cC_,style:{marginRight:"0.5em"},color:"dark"===r?"#7ecfee":"#0033a1"}),title:t.label,description:t.customProps?.description??(0,l.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function h(e){let{item:t}=e;const{colorMode:i}=(0,m.I)(),r=(0,c.Z)(t.href)?n.createElement(d.G,{icon:u.FL8,style:{marginRight:"0.5em"},color:"dark"===i?"#7ecfee":"#0033a1"}):n.createElement(d.G,{icon:u.wlW,style:{marginRight:"0.5em"},color:"dark"===i?"#7ecfee":"#0033a1"}),a=(0,o.xz)(t.docId??void 0);return n.createElement(p,{href:t.href,icon:r,title:t.label,description:t.description??a?.description})}function C(e){let{item:t}=e;switch(t.type){case"link":return n.createElement(h,{item:t});case"category":return n.createElement(g,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}},36989:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>u});var n=i(87462),r=(i(67294),i(3905)),a=i(8065),o=i(53438);const c={id:"mfa-configuration",title:"MFA Configuration",description:"MFA Configuration",custom_edit_url:null},l=void 0,s={unversionedId:"api/beta/mfa-configuration",id:"api/beta/mfa-configuration",title:"MFA Configuration",description:"MFA Configuration",source:"@site/docs/api/beta/mfa-configuration.tag.mdx",sourceDirName:"api/beta",slug:"/api/beta/mfa-configuration",permalink:"/docs/api/beta/mfa-configuration",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"mfa-configuration",title:"MFA Configuration",description:"MFA Configuration",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Retrieve all Managed Clusters.",permalink:"/docs/api/beta/get-managed-clusters"},next:{title:"Configuration of Okta MFA method",permalink:"/docs/api/beta/get-mfa-okta-config"}},d={},u=[],m={toc:u},f="wrapper";function p(e){let{components:t,...i}=e;return(0,r.kt)(f,(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Configure and test multifactor authentication (MFA) methods"),(0,r.kt)(a.Z,{items:(0,o.jA)().items,mdxType:"DocCardList"}))}p.isMDXComponent=!0}}]);