"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[94923],{84151:(e,t,r)=>{r.d(t,{Z:()=>y});var o=r(67294),i=r(86010),n=r(39960),a=r(53438),l=r(13919),c=r(95999);const s={cardContainer:"cardContainer_S8oU",cardTitle:"cardTitle_HoSo",cardDescription:"cardDescription_c27F"};var d=r(99603),m=r(21702),u=r(92949);function p(e){let{href:t,children:r}=e;return o.createElement(n.default,{href:t,className:(0,i.default)("card padding--lg",s.cardContainer)},r)}function f(e){let{href:t,icon:r,title:n,description:a}=e;return o.createElement(p,{href:t},o.createElement("h2",{className:(0,i.default)("text--truncate",s.cardTitle),title:n},r,n),a&&o.createElement("p",{className:s.cardDescription,title:a},a))}function h(e){let{item:t}=e;const r=(0,a.Wl)(t),{colorMode:i}=(0,u.I)();return r?o.createElement(f,{href:r,icon:o.createElement(d.G,{icon:m.cC_,style:{marginRight:"0.5em"},color:"dark"===i?"#7ecfee":"#0033a1"}),title:t.label,description:t.customProps?.description??(0,c.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function g(e){let{item:t}=e;const{colorMode:r}=(0,u.I)(),i=(0,l.Z)(t.href)?o.createElement(d.G,{icon:m.FL8,style:{marginRight:"0.5em"},color:"dark"===r?"#7ecfee":"#0033a1"}):o.createElement(d.G,{icon:m.wlW,style:{marginRight:"0.5em"},color:"dark"===r?"#7ecfee":"#0033a1"}),n=(0,a.xz)(t.docId??void 0);return o.createElement(f,{href:t.href,icon:i,title:t.label,description:t.description??n?.description})}function y(e){let{item:t}=e;switch(t.type){case"link":return o.createElement(g,{item:t});case"category":return o.createElement(h,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}},93758:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var o=r(87462),i=(r(67294),r(3905)),n=r(8065),a=r(53438);const l={id:"mfa-controller",title:"MFA Controller",description:"MFA Controller",custom_edit_url:null},c=void 0,s={unversionedId:"api/beta/mfa-controller",id:"api/beta/mfa-controller",title:"MFA Controller",description:"MFA Controller",source:"@site/docs/api/beta/mfa-controller.tag.mdx",sourceDirName:"api/beta",slug:"/api/beta/mfa-controller",permalink:"/docs/api/beta/mfa-controller",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"mfa-controller",title:"MFA Controller",description:"MFA Controller",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Delete MFA method configuration",permalink:"/docs/api/beta/delete-mfa-config"},next:{title:"Verifying authentication via Okta method",permalink:"/docs/api/beta/send-okta-verify-request"}},d={},m=[],u={toc:m},p="wrapper";function f(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This API used for multifactor authentication functionality belong to gov-multi-auth service. This controller allow you to verify authentication by specified method"),(0,i.kt)(n.Z,{items:(0,a.jA)().items,mdxType:"DocCardList"}))}f.isMDXComponent=!0}}]);