"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[77288],{71981:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=o(87462),r=(o(67294),o(3905));const s={id:"powershell-sdk-create",title:"Creating resources with the PowerShell SDK",pagination_label:"PowerShell SDK",sidebar_label:"Create a resource",sidebar_position:2,sidebar_class_name:"powershellsdk",keywords:["powershell","sdk","create"],description:"Learn how to create new resources using the PowerShell SDK in this guide.",slug:"/tools/sdk/powershell/create",tags:["SDK"]},a=void 0,i={unversionedId:"tools/sdk/powershell/powershell-sdk-create",id:"tools/sdk/powershell/powershell-sdk-create",title:"Creating resources with the PowerShell SDK",description:"Learn how to create new resources using the PowerShell SDK in this guide.",source:"@site/docs/tools/sdk/powershell/creating-resources.md",sourceDirName:"tools/sdk/powershell",slug:"/tools/sdk/powershell/create",permalink:"/docs/tools/sdk/powershell/create",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/tools/sdk/powershell/creating-resources.md",tags:[{label:"SDK",permalink:"/docs/tags/sdk"}],version:"current",lastUpdatedBy:"darrell-thobe-sp",lastUpdatedAt:1709674012,formattedLastUpdatedAt:"Mar 5, 2024",sidebarPosition:2,frontMatter:{id:"powershell-sdk-create",title:"Creating resources with the PowerShell SDK",pagination_label:"PowerShell SDK",sidebar_label:"Create a resource",sidebar_position:2,sidebar_class_name:"powershellsdk",keywords:["powershell","sdk","create"],description:"Learn how to create new resources using the PowerShell SDK in this guide.",slug:"/tools/sdk/powershell/create",tags:["SDK"]},sidebar:"openApiSidebar",previous:{title:"PowerShell SDK",permalink:"/docs/tools/sdk/powershell/getting-started"},next:{title:"PowerShell SDK",permalink:"/docs/tools/sdk/powershell/update"}},l={},c=[],p={toc:c},d="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can use the SDK to create new resources. These cmdlets will typically start with the ",(0,r.kt)("inlineCode",{parentName:"p"},"New")," keyword."),(0,r.kt)("p",null,"To see a list of available create cmdlets, run this command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'Get-Command -Module PSSailpoint | where-object {$_.name -like "*New-*" } | Sort-Object Name | Get-Help | Format-Table Name, Synopsis\n')),(0,r.kt)("p",null,"The SDK returns this output (all beta endpoints are designated by the Beta prefix): "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"Name                     Synopsis\n----                     --------\nNew-AccessProfile        Create an Access Profile\nNew-AccessRequest        Submit an Access Request\nNew-Account              Create Account\nNew-AuthOrgNetworkConfig Create security network configuration.\nNew-BetaAccessProfile    Create an Access Profile\nNew-BetaAccessRequest    Submit an Access Request\nNew-BetaAccount          Create Account\nNew-BetaCampaign         Create a campaign\nNew-BetaCampaignTemplate Create a Campaign Template\nNew-BetaCommonAccess     Create common access items\nNew-BetaConnectorRule    Create Connector Rule\nNew-BetaCustomPasswordI\u2026 Create Custom Password Instructions\nNew-BetaDigitToken       Generate a digit token\nNew-BetaDomainDkim       Verify domain address via DKIM\n...\n")),(0,r.kt)("p",null,"Here is an example create workgroup script from the beta APIs you can copy into your PowerShell instance to try it out:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell",metastring:"showLineNumbers",showLineNumbers:!0},'$Identity = Get-PublicIdentities -Limit 1\n\n$JSON = @"\n{\n    "owner": {\n      "type": "IDENTITY",\n      "id": "$($Identity.id)",\n      "name": "$($Identity.name)"\n    },\n    "name": "DB Access Governance Group",\n    "description": "Description of the Governance Group"\n  }\n"@\n\n$WorkGroup = ConvertFrom-BetaJsonToWorkgroupDto -Json $JSON\n\n$WorkGroup = Initialize-BetaWorkgroupDto -Name "DB Access Governance Group" -Description "Description of the Governance Group" -Owner @{ \n    "type" = "IDENTITY"\n    "id" = $Identity.id\n    "name" = $Identity.name \n}\n\nNew-BetaWorkgroup -WorkgroupDto $WorkGroup\n')),(0,r.kt)("p",null,"The example uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"Get-PublicIdentities -Limit")," cmdlet to pull an identity needed to be the owner of the Workgroup and shows two ways of creating the new WorkGroup to send with the request."),(0,r.kt)("p",null,"The first on lines 3-15 initializes a json string then converts the string into a WorkGroup object with ",(0,r.kt)("inlineCode",{parentName:"p"},"ConvertFrom-BetaJsonToWorkgroupDto")),(0,r.kt)("p",null,"The second on lines 17-21 initializes the WorkGroup object by passing in each property of the WorkGroup."),(0,r.kt)("p",null,"The WorkGroup will be returned by the SDK:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"Name                           Value\n----                           -----\ndescription                    Description of the Governance Group\nowner                          {[displayName, Brian Mendoza], [emailAddress, ], [type, IDENTITY], [id, 0003c25c365e492381d4e557b6159f9b]\u2026}\nmemberCount                    0\nconnectionCount                0\nid                             a241d625-d948-4c41-839e-869b790837a1\nname                           DB Access Governance Group\ncreated                        \nmodified                       \n")))}u.isMDXComponent=!0}}]);