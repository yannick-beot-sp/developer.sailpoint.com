"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[50869],{10852:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=s(87462),i=(s(67294),s(3905));const r={id:"typescript-sdk-search",title:"Search with The TypeScript SDK",pagination_label:"Search",sidebar_label:"Search",sidebar_position:6,sidebar_class_name:"typescriptsdk",keywords:["tsc","typescript","sdk","search"],description:"Learn how to use the TypeScript SDK to search.",slug:"/tools/sdk/typescript/search",tags:["SDK"]},n=void 0,o={unversionedId:"tools/sdk/typescript/typescript-sdk-search",id:"tools/sdk/typescript/typescript-sdk-search",title:"Search with The TypeScript SDK",description:"Learn how to use the TypeScript SDK to search.",source:"@site/docs/tools/sdk/typescript/search.md",sourceDirName:"tools/sdk/typescript",slug:"/tools/sdk/typescript/search",permalink:"/docs/tools/sdk/typescript/search",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/tools/sdk/typescript/search.md",tags:[{label:"SDK",permalink:"/docs/tags/sdk"}],version:"current",lastUpdatedBy:"darrell-thobe-sp",lastUpdatedAt:1709674012,formattedLastUpdatedAt:"Mar 5, 2024",sidebarPosition:6,frontMatter:{id:"typescript-sdk-search",title:"Search with The TypeScript SDK",pagination_label:"Search",sidebar_label:"Search",sidebar_position:6,sidebar_class_name:"typescriptsdk",keywords:["tsc","typescript","sdk","search"],description:"Learn how to use the TypeScript SDK to search.",slug:"/tools/sdk/typescript/search",tags:["SDK"]},sidebar:"openApiSidebar",previous:{title:"Paginate Results",permalink:"/docs/tools/sdk/typescript/paginate"},next:{title:"Retries",permalink:"/docs/tools/sdk/typescript/retries"}},c={},p=[],l={toc:p},d="wrapper";function h(e){let{components:t,...s}=e;return(0,i.kt)(d,(0,a.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To try using the ISC ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/v3/search-post"},"search functionality"),' along with pagination, copy this code into your "index.ts" file:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'const search = async () => {\n    let apiConfig = new Configuration()\n    let api = new SearchApi(apiConfig)\n    let search: Search = {\n        indices: [\n            "identities"\n        ],\n        query: {\n            query: "*"\n        },\n        sort: ["-name"]\n }\n    const val = await Paginator.paginateSearchApi(api, search, 100, 1000)\n\n    for (const result of val.data) {\n        const castedResult: IdentityDocument = result\n        console.log(castedResult.name)\n    }\n    \n}\n')),(0,i.kt)("p",null,"Run this command to compile and run the code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"tsc src/index.ts && node src/index.js\n")),(0,i.kt)("p",null,'This example returns 1000 identities, 100 at a time, and sorts them in descending order by name. You can also change the search pagination by changing "100" and "1000", respectively.'),(0,i.kt)("p",null,"The two main ways you can manipulate this example are to change the ",(0,i.kt)("inlineCode",{parentName:"p"},"indices")," or the ",(0,i.kt)("inlineCode",{parentName:"p"},"query"),". For example, if you add ",(0,i.kt)("inlineCode",{parentName:"p"},'"access profiles"'),' to the indices, the SDK will search access profiles too. If you change the query to "a*", the search will return all records starting with the letter "a".'),(0,i.kt)("p",null,"You can also change the sorting logic in the brackets next to ",(0,i.kt)("inlineCode",{parentName:"p"},"sort"),"."))}h.isMDXComponent=!0}}]);